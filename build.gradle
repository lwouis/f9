plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id 'edu.sc.seis.launch4j' version '1.6.2'
    id 'net.alchim31.getdown' version '0.4.6'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'application'

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

repositories {
    mavenCentral()
    //maven { url 'https://jitpack.io' }
}

configurations.all {
    // Make Spring log through slf4j (see http://www.codingpedia.org/ama/how-to-log-in-spring-with-slf4j-and-logback/)
    exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
    compile fileTree(dir: 'lib', include: ['*.jar'])
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'commons-io:commons-io:2.5'
    compile 'org.apache.lucene:lucene-core:6.2.1'
    compile 'com.melloware:jintellitype:1.3.9'
    compile 'com.google.code.gson:gson:2.7'
    compile 'org.controlsfx:controlsfx:8.40.12'
    compile 'org.webjars:font-awesome:4.6.3'
    compile 'org.springframework:spring-core:4.3.3.RELEASE'
    compile 'org.springframework:spring-context:4.3.3.RELEASE'
    compile 'org.springframework:spring-orm:4.3.3.RELEASE'
    compile 'org.springframework:spring-tx:4.3.3.RELEASE'
    compile 'aspectj:aspectjweaver:1.5.4'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:jcl-over-slf4j:1.7.21'
    compile 'ch.qos.logback:logback-core:1.1.7'
    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'org.hibernate:hibernate-core:5.2.3.Final'
    compile 'com.h2database:h2:1.4.192'
    compile 'net.ttddyy:datasource-proxy:1.3.3'
    testCompile 'org.testfx:testfx-core:4.0.4-alpha'
    testCompile 'org.testfx:testfx-junit:4.0.4-alpha'
    testCompile 'org.testfx:openjfx-monocle:1.8.0_20'
}

// How-to dev/run this project
// ---------------------------
// shadowJar -t: build the shadowJar + watch
// runShadow: (build if not done through the watch) + run the shadowJar
// launch4j: builds the launch4j directory which contains the .exe

mainClassName = 'com.lwouis.f9.Main'

launch4j {
    copyConfigurable = project.tasks.shadowJar.outputs.files
    jar = 'lib/' + project.tasks.shadowJar.archiveName
}

/*getdown {
    urlbase = 'http://mysite.com/myapp/'
    tmplGetdownTxt = tmplGetdownTxt + '\nallow_offline = true'
}*/

sourceSets {
    main {
        java {
            srcDir 'lib/'
        }
    }
}

compileJava {
    options.incremental = true
    // removing javac warning because sun.awt.shell.ShellFolder is used
    // https://gist.github.com/BorePlusPlus/3772416
    options.compilerArgs << '-XDignore.symbol.file'
    options.fork = true
    options.forkOptions.executable = 'javac'
}

checkstyle {
    toolVersion = '7.1.2'
    configFile = rootProject.file('checkstyle.xml')
}

// Fail build on Checkstyle warnings
// https://issues.gradle.org/browse/GRADLE-2888
tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains('<error ')) {
                throw new GradleException('There were checkstyle warnings! For more info check ' + $outputFile)
            }
        }
    }
}

// forward system properties (e.g. headless=true) to the Java tests
[test].each { runTask ->
    configure(runTask) {
        systemProperties System.properties
    }
}

// show full stracktraces if a test throws an exception
test {
    testLogging {
        exceptionFormat = 'full'
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
